@use "../../theme/variables.module.scss" as theme;
@use "sass:map";

.Button {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    position: relative;
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
    outline: 0px;
    border: 0px;
    margin: 0px;
    cursor: pointer;
    user-select: none;
    vertical-align: middle;
    appearance: none;
    text-decoration: none;
    font-family: map.get(theme.$fontFamily, "regular");
    font-weight: 500;
    font-size: 0.875rem;
    line-height: 1.75;
    letter-spacing: 0.02857em;
    text-transform: capitalize;
    min-width: 64px;
    padding: 6px 16px;
    border-radius: 4px;
    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

    @each $name, $value in theme.$palette {
        &_contained_#{$name} {
            background-color: map.get(theme.$palette, $name, "main") !important;
            color: map.get(theme.$palette, $name, "contrastText") !important;
            box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px, rgba(0, 0, 0, 0.14) 0px 2px 2px 0px,
                rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;
            &:hover {
                background-color: map.get(theme.$palette, $name, "light") !important;
            }
        }
    }

    @each $name, $value in theme.$palette {
        &_outlined_#{$name} {
            color: map.get(theme.$palette, $name, "main") !important;
            border: 1px solid map.get(theme.$palette, $name, "main");
            background-color: transparent;
            &:hover {
                border: map.get(theme.$palette, $name, "light") !important;
                color: map.get(theme.$palette, $name, "light") !important;
            }
        }
    }

    @each $name, $value in theme.$palette {
        &_text_#{$name} {
            color: map.get(theme.$palette, $name, "main") !important;
            background-color: transparent;
            &:hover {
                color: map.get(theme.$palette, $name, "light") !important;
            }
        }
    }
}
